### This file was generated by Nexus Schema
### Do not make changes to this file directly


type CreateGroupResponse {
  errorMessage: String
  group: Group
}

type Group {
  memberships: [Membership]
  name: String
  uuid: String
}

union InitialScreen = LessonsScreen | UsersScreen

type Lesson {
  assignee: User
  assigneeUuid: String
  assigner: User
  assignerUuid: String
  title: String
  uuid: String
}

type LessonsScreen {
  user: User
}

enum Level {
  debug
  error
  fatal
  info
  trace
  warn
}

type LoginResponse {
  errorMessage: String
  jwt: String
  screen: InitialScreen
}

type Membership {
  group: Group
  groupUuid: String
  role: Role
  roleUuid: String
  userUuid: String
  uuid: String
}

type Mutation {
  changeLogLevel(level: Level): Boolean!

  "\n        Creates a new group\n\n        The current user will be added to the group as the group owner.\n\n        **Requires Authentication**.\n      "
  createGroup(name: String!): CreateGroupResponse!
  login(email: String!, password: String!): LoginResponse!
}

type Permission {
  roles: [Role]
  uuid: String
}

type Query {
  user(userUuid: String!): User!
  users: [User]!
}

type Role {
  memberships: [Membership]
  permissions: [Permission]
  title: String
  uuid: String
}

type User {
  assignedLessons: [Lesson!]
  email: String
  memberships: [Membership]
  name: String
  password: String
  receivedLessons: [Lesson!]
  uuid: String
}

type UsersScreen {
  user: User
}