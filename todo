- add logs to the server
    - add a request_id to the child logger
        - research best practices
    - create a transport specific to my dev environment
        - add env to the log? 
    - log each step of the authorizer
    - apollo server logs
    - test what happen and log errors that happens inside resolvers. Ex: types/User.ts:77
    - debug/check num of open connections and if there is a pg restriction on that
    - add env, service and version? 

- telemetry: prisma / jaeger / ...
    - telemetry: see if we already can bind prisma queries to requests (request_id/user_id): https://github.com/prisma/prisma/issues/7596
    - add a final query count (num of queries during the request) to the logs 
- learn how to debug js
- create some kind of enum for permissions to avoid type errors

- adjust prettier and format on save (prettier)
- improve resolver types (root)

UsersScreen
    list groups (cards)
        list users (small "icons" with name below)
LessonsScreen
    list lessons
        title
        assigned by 
        assigned date

- add a request_id to the frontent and propagate 

- add tests to the auth system
    - should we use seeds as fixtures?

- create logout mutation
    - persist token in db?
    - only allow authorized users
        - login (only allowed for unauthenticated users)
        - logout (allowed for most users)
    - think about only running authorized queries in prod
        - security
        - avoid recursive queries to compromise the server
- frontend
- postgress db
    - migrate password field types to varchars(since PG native are richer)
    - create enum for roles field
    - postgress tool to see the db
- take a look on prisma's data guide
- deploy
    - how to access running instances, query the DB, interact with the app? 
    - add restrictions on migrations, seeds, etc...

Login - optimize to set the currentAuthUser with the same log in user (low prio)