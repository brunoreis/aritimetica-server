- authorization
    - change ids by uuids
    - query groups or a specific
        - authorize student
            - should query "me", but not other users
            - create a User resolver
                - add a me:boolean param
                    - return the logged user
            - are we able to know if the query graph is asking for the group and eager loading it in the membership resolver? 
            - same with memberships
            - what about filtering the fields?
            - rename ids by uuids
        - test with a teacher
        - test with an admin
            - should be able to retrieve any user
    - create user lists (inside groups? / main one?)
        - authorize admins
        - students ?
        - authorize teachers
    - create user lists
        - authorize admins
        - students
        - authorize teachers
    - create logout mutation
    - only allow authorized users
        - login (only allowed for unauthenticated users)
        - logout (allowed for most users)
- postgress db
    - migrate password field types to varchars(since PG native are richer)
    - create enum for roles field
    - postgress tool to see the db
- take a look on prisma's data guide
- deploy
    - how to access running instances, query the DB, interact with the app? 
    - add restrictions on migrations, seeds, etc...